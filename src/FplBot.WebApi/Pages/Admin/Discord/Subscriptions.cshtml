@page
@using FplBot.Discord.Data
@model FplBot.WebApi.Pages.Admin.Discord.Subscriptions
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@if (TempData.ContainsKey("msg"))
{
    <div class="alert alert-warning alert-dismissible" role="alert">
        @TempData["msg"]
    </div>
}

<div class="col-12">
    <h1>Discord </h1>
    @Model.GuildsWithSubs.Count(g => g.Subs.Any()) servers with in total @Model.GuildsWithSubs.Sum(s => s.Subs.Count()) subs. @Model.GuildsWithSubs.Count(g => !g.Subs.Any()) without any subs.
    <ol>
        @foreach (var guild in Model.GuildsWithSubs.OrderByDescending(g => g.Subs.Any()))
        {
            var cssClass = "primary";
            if (!guild.Subs.Any())
            {
                cssClass = "warning";
            }

            <li class="list-group-item d-flex align-items-baseline list-group-item-@cssClass">
                <div>
                    @guild.guild.Name
                    @if (!guild.Subs.Any())
                    {
                        <span class="ml-3 alert-warning">⚠️ No subs!</span>
                    }
                    else
                    {
                        <span class="ml-3">(@guild.Subs.Count() subs)</span>
                    }
                </div>
            </li>
            if (guild.Subs.Any())
            {
                <ul>
                    @foreach (var sub in guild.Subs)
                    {
                        <li class="list-group-item d-flex align-items-baseline">
                            <div>
                                @sub.ChannelId - @ToFormatted(sub.Subscriptions)
                            </div>

                            <div class="ml-auto">
                                <form asp-page-handler="DeleteSub" method="post">
                                    <input class="btn btn-danger btn-block" type="submit" name="delete-sub" value="Delete">
                                    <input type="hidden" name="guildId" value="@sub.GuildId">
                                    <input type="hidden" name="channelId" value="@sub.ChannelId">
                                </form>
                            </div>
                        </li>
                    }
                </ul>
            }
        }
    </ol>
</div>

@functions
{
    private static string ToFormatted(IEnumerable<EventSubscription> subSubscriptions)
    {
        return string.Join(",", subSubscriptions);
    }
}
