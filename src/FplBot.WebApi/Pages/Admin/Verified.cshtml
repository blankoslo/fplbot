@page
@using FplBot.WebApi.Pages.Admin
@using Newtonsoft.Json
@model FplBot.WebApi.Pages.Admin.Verified
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div class="col-12">
    <h1>Admin page</h1>
    <p>Logged in as @User.Identity.Name from @User.Claims.FirstOrDefault(c => c.Type == "urn:slack:team_name")?.Value</p>
    <p><a href="@Url.Action("Logout","Account")">Log out</a></p>
    <p><a href="@Url.PageLink("Broadcast")">GÃ¥ til @Url.Page("Broadcast")</a></p>
    
    
    @if (TempData.ContainsKey("msg"))
    {
        <div class="alert alert-warning alert-dismissible" role="alert">
            @TempData["msg"]    
        </div>
    }
    
    <h3>Verified entries (@Model.VerifiedEntries.Count())</h3>


        @if (Model.VerifiedEntries.Any())
        {
            <form asp-page-handler="DeleteAll">
                @Html.AntiForgeryToken()
                <input type="submit" value="Delete all" class="btn btn-danger" onclick="return confirm('Are you sure?')"/>
            </form>
            
            <form asp-page-handler="SeedSelfishness">
                @Html.AntiForgeryToken()
                <input type="submit" value="Seed selfishness" class="btn btn-info"/>
            </form>
            
            <form asp-page-handler="UpdateAllBaseStats">
                @Html.AntiForgeryToken()
                <input type="submit" value="Update all base stats" class="btn btn-info"/>
            </form>
            
            <form asp-page-handler="UpdateLiveScoreStats">
                @Html.AntiForgeryToken()
                <input type="submit" value="Update only live score stats" class="btn btn-info"/>
            </form>            
            
            <form asp-page-handler="IncrementSelfishStats">
                @Html.AntiForgeryToken()
                <input type="submit" value="INCREMENT selfish stats (no real good check for stats already added)" class="btn btn-info"/>
            </form>
            

            
            <form asp-page-handler="UpdateSelfPoints">
                @Html.AntiForgeryToken()
                <input type="number" name="entryId"/>
                <input type="number" name="points"/>
                <input type="submit" value="Add self-points for PL entry" class="btn btn-info"/>
            </form>
            
            <form asp-page-handler="IncrementWeekCounter">
                @Html.AntiForgeryToken()
                <input type="number" name="entryId"/>
                <input type="submit" value="Increment weeks ownership" class="btn btn-info"/>
            </form>
            
            <div class="table">
                   <div class="tr">
                        <div class="th entryid">EntryId</div>
                        <div class="th">Name</div>
                        <div class="th">TeamName</div>
                        <div class="th">EntryType</div>
                        <div class="th">Alias</div>
                        <div class="th">Description</div>
                        <div class="th">Stats</div>
                        <div class="th">PL-entry</div>
                        <div class="th">Action</div>
                    </div>
                    @foreach (var entry in Model.VerifiedEntries)
                    {
                        <form class="tr" asp-page-handler="UpdateEntry" method="post">
                            @Html.AntiForgeryToken()
                            <div class="td entryid"><input value="@entry.EntryId" name="@(nameof(UpdateEntry.EntryId))"/></div>
                            <div class="td"><input value="@entry.FullName" name="@(nameof(UpdateEntry.FullName))"/></div>
                            <div class="td"><input value="@entry.EntryTeamName" name="@(nameof(UpdateEntry.EntryTeamName))"/></div>
                            <div class="td"><input value="@entry.VerifiedEntryType" name="@(nameof(UpdateEntry.VerifiedEntryType))"/></div>
                            <div class="td"><input value="@entry.Alias" name="@(nameof(UpdateEntry.Alias))"/></div>
                            <div class="td"><input value="@entry.Description" name="@(nameof(UpdateEntry.Description))"/></div>
                            <div class="td">
                                @{ var entryStats = entry.EntryStats != null ? JsonConvert.SerializeObject(entry.EntryStats) : ""; }
                                <textarea class="code" name="@nameof(UpdateEntry.EntryStats)">@entryStats</textarea>
                            </div>
                            <div class="td">
                                @{
                                    var plEntry = Model.VerifiedPLEntries.FirstOrDefault(pl => pl.EntryId == entry.EntryId);
                                    var json = JsonConvert.SerializeObject(plEntry);
                                }
                                <textarea class="code" readonly>@json</textarea>
                            </div>
                            <div class="td">
                                <input type="hidden" name="entryId" value="@entry.EntryId"/>
                                <input type="submit" name="action" value="@nameof(UpdateAction.Update)" class="btn btn-primary"/>
                                <input type="submit" name="action" value="@nameof(UpdateAction.Remove)" class="btn btn-danger" onclick="return confirm('Are you sure?')"/>
                            </div>
                        </form>
                    }
                </div>
        
        }
        else
        {
            <p>No entries :/</p>
            <form asp-page-handler="SeedEntries">
                @Html.AntiForgeryToken()
                <input type="submit" value="Import hardcoded list" class="btn btn-info"/>
            </form>
        }
</div>
