using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using NServiceBus;
using Slackbot.Net.SlackClients.Http.Extensions;

[assembly: NServiceBusTriggerFunction("FplBot.Functions", TriggerFunctionName = "FplBotAutoGenerated")]

public class Program
{
    public static void Main()
    {
        var host = new HostBuilder()
            .ConfigureFunctionsWorkerDefaults()
            .ConfigureLogging(l => l.SetMinimumLevel(LogLevel.Debug))
            .ConfigureServices(s =>
            {
                s.AddSlackClientBuilder();
            })
            .UseNServiceBus("FplBot.Functions", (appConfig,endpointConfig) =>
            {
                endpointConfig.LogDiagnostics();

                // Workaround for unstable EnvironmentName in Azure
                // (see https://github.com/Azure/azure-functions-host/issues/6239)
                var environmentName = appConfig.GetValue<string>("DOTNET_ENVIRONMENT") ??
                                      Environment.GetEnvironmentVariable("AZURE_FUNCTIONS_ENVIRONMENT") ??
                                      Environment.GetEnvironmentVariable("DOTNET_ENVIRONMENT");

                if (environmentName == "Development")
                {
                    Console.WriteLine($"Running in Development mode, using topic: {Environment.MachineName}");
                    endpointConfig.Transport.TopicName = Environment.MachineName;
                }
            })
            .Build();

        host.Run();
    }
}
