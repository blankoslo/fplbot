name: deploy-to-test

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - "master"

jobs:
  deploy-ubuntu-test:
    name: deploy-to-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100"
      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: test
          ref: ${{ github.head_ref }}
      - run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
      - name: Build Function
        run: dotnet build ./src/FplBot.Functions -o ./output -c Release /p:Version=${{ steps.gitversion.outputs.fullSemVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
      - uses: pulumi/actions@v3
        id: pulumi
        with:
          command: up
          stack-name: Test
          work-dir: ./src/FplBot.Infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy function to test
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ steps.pulumi.outputs.FunctionName }}
          package: './output'
      - name: Build docker images
        run: docker build -t registry.heroku.com/blank-fplbot-test/web --build-arg INFOVERSION=${{ steps.gitversion.outputs.informationalVersion }} --build-arg VERSION=${{ steps.gitversion.outputs.fullSemVer }} -f Dockerfile .
      - uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_TOKEN }}
      - name: Push docker image to Heroku
        run: docker push registry.heroku.com/blank-fplbot-test/web
      - name: Deploy to test
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
        run: heroku container:release web --app blank-fplbot-test
      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
